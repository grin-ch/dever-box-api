// Code generated by ent, DO NOT EDIT.

package model

import (
	"time"

	"github.com/grin-ch/dever-box-api/model/schema"
	"github.com/grin-ch/dever-box-api/model/user"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescNickname is the schema descriptor for nickname field.
	userDescNickname := userFields[1].Descriptor()
	// user.NicknameValidator is a validator for the "nickname" field. It is called by the builders before save.
	user.NicknameValidator = userDescNickname.Validators[0].(func(string) error)
	// userDescAccount is the schema descriptor for account field.
	userDescAccount := userFields[2].Descriptor()
	// user.AccountValidator is a validator for the "account" field. It is called by the builders before save.
	user.AccountValidator = userDescAccount.Validators[0].(func(string) error)
	// userDescPassword is the schema descriptor for password field.
	userDescPassword := userFields[3].Descriptor()
	// user.PasswordValidator is a validator for the "password" field. It is called by the builders before save.
	user.PasswordValidator = userDescPassword.Validators[0].(func(string) error)
	// userDescRegTime is the schema descriptor for reg_time field.
	userDescRegTime := userFields[4].Descriptor()
	// user.DefaultRegTime holds the default value on creation for the reg_time field.
	user.DefaultRegTime = userDescRegTime.Default.(func() time.Time)
	// userDescID is the schema descriptor for id field.
	userDescID := userFields[0].Descriptor()
	// user.IDValidator is a validator for the "id" field. It is called by the builders before save.
	user.IDValidator = userDescID.Validators[0].(func(int) error)
}
